using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController1 : MonoBehaviour
{
    private Vector3 velocity;

    private SpriteRenderer rend;
    private Animator anim;
    public float speed = 2.0f;

    public GameObject Bullet;
    public int shots = 3;
    private int lookDir; // 1 = up, 2 = right, 3 = down, 4 = left

    // Use this for initialization
    void Start()
    {
        velocity = new Vector3(0f, 0f, 0f);
        rend = GetComponent<SpriteRenderer>();
        anim = GetComponent<Animator>();
        lookDir = 2;
    }

    // Update is called once per frame
    void Update()
    {
        if (Input.GetAxis("Horizontal") != 0)
        {
            velocity = new Vector3(Input.GetAxis("Horizontal"), 0f, 0f);
            anim.speed = 0.5f;
            if (velocity.x > 0)
            {
                anim.Play("PlalyerRight");
                lookDir = 2;
            } else
            {
                anim.Play("PlalyerLeft");
                lookDir = 4;
            }
        } else if (Input.GetAxis("Vertical") != 0) 
        {
            velocity = new Vector3(0f, Input.GetAxis("Vertical"), 0f);
            anim.speed = 0.5f;
            if (velocity.y > 0)
            {
                anim.Play("PlalyerUp");
                lookDir = 1;
            }
            else
            {
                anim.Play("PlalyerDown");
                lookDir = 3;
            }
        } else
        {
            anim.speed = 0f;
        }
        
        transform.position = transform.position + velocity * Time.deltaTime * speed;

        if (Input.GetButtonDown("Fire1") && (shots > 0))
        {
            Debug.Log("Shoot");
            if (lookDir == 1)
            {
                //the offset 
                Vector3 offset = new Vector3(0f, 0.7f, 0f);
                //create a bullet pointing in its natural direction 
                GameObject b = Instantiate(Bullet, new Vector3(0f, 0f, 0f), Quaternion.identity);
                b.GetComponent<BulletController>().InitPosition(transform.position + offset, new Vector3(0f, 2f, 0f));
            }
            else if (lookDir == 2)
            {
                //the offset 
                Vector3 offset = new Vector3(0.7f, 0f, 0f);
                //create a bullet pointing in its natural direction 
                GameObject b = Instantiate(Bullet, new Vector3(0f, 0f, 0f), Quaternion.AngleAxis(270, Vector3.forward));
                b.GetComponent<BulletController>().InitPosition(transform.position + offset, new Vector3(0f, 2f, 0f));
            }
            else if (lookDir == 3)
            {
                //the offset 
                Vector3 offset = new Vector3(0f, -0.7f, 0f);
                //create a bullet pointing in its natural direction 
                GameObject b = Instantiate(Bullet, new Vector3(0f, 0f, 0f), Quaternion.AngleAxis(180, Vector3.forward));
                b.GetComponent<BulletController>().InitPosition(transform.position + offset, new Vector3(0f, 2f, 0f));
            }
            else if (lookDir == 4)
            {
                //the offset 
                Vector3 offset = new Vector3(-0.7f, 0f, 0f);
                //create a bullet pointing in its natural direction 
                GameObject b = Instantiate(Bullet, new Vector3(0f, 0f, 0f), Quaternion.AngleAxis(90, Vector3.forward));
                b.GetComponent<BulletController>().InitPosition(transform.position + offset, new Vector3(0f, 2f, 0f));
            }
            shots -= 1;
        }
    }
    void OnTriggerEnter2D(Collider2D other)
    {
        Debug.Log("Hit");
        if (other.gameObject.tag == "Enemy")
        {
            Destroy(gameObject);
        }
        if (other.gameObject.tag == "Finish")
        {
            GameObject.Find("GameController").GetComponent<GameController>().NextLevel();
        }
    }
}